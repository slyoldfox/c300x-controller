{"version":3,"file":"sip-bundle.js","mappings":"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","sources":["webpack://c300x-controller/./node_modules/@slyoldfox/sip/sip.js","webpack://c300x-controller/./node_modules/sdp/sdp.js","webpack://c300x-controller/./bundles/sip-manager.ts","webpack://c300x-controller/external node-commonjs \"assert\"","webpack://c300x-controller/external node-commonjs \"crypto\"","webpack://c300x-controller/external node-commonjs \"dgram\"","webpack://c300x-controller/external node-commonjs \"dns\"","webpack://c300x-controller/external node-commonjs \"net\"","webpack://c300x-controller/external node-commonjs \"os\"","webpack://c300x-controller/external node-commonjs \"tls\"","webpack://c300x-controller/external node-commonjs \"util\"","webpack://c300x-controller/webpack/bootstrap","webpack://c300x-controller/webpack/startup"],"sourcesContent":["var util = require('util');\r\nvar net = require('net');\r\nvar dns = require('dns');\r\nvar assert = require('assert');\r\nvar dgram = require('dgram');\r\nvar tls = require('tls');\r\nvar os = require('os');\r\nvar crypto = require('crypto');\r\n\r\nfunction debug(e) {\r\n  if(e.stack) {\r\n    util.debug(e + '\\n' + e.stack);\r\n  }\r\n  else\r\n    util.debug(util.inspect(e));\r\n}\r\n\r\nfunction toBase64(s) { \r\n  switch(s.length % 3) {\r\n  case 1:\r\n    s += '  ';\r\n    break;\r\n  case 2:\r\n    s += ' ';\r\n    break;\r\n  default:\r\n  }\r\n\r\n  return (new Buffer.from(s)).toString('base64').replace(/\\//g, '_').replace(/\\+/g, '-');\r\n}\r\n// Actual stack code begins here\r\n\r\nfunction parseResponse(rs, m) {\r\n  var r = rs.match(/^SIP\\/(\\d+\\.\\d+)\\s+(\\d+)\\s*(.*)\\s*$/);\r\n\r\n  if(r) {\r\n    m.version = r[1];\r\n    m.status = +r[2];\r\n    m.reason = r[3];\r\n\r\n    return m;\r\n  }  \r\n}\r\n\r\nfunction parseRequest(rq, m) {\r\n  var r = rq.match(/^([\\w\\-.!%*_+`'~]+)\\s([^\\s]+)\\sSIP\\s*\\/\\s*(\\d+\\.\\d+)/);\r\n\r\n  if(r) {\r\n    m.method = unescape(r[1]);\r\n    m.uri = r[2];\r\n    m.version = r[3];\r\n\r\n    return m;\r\n  }\r\n}\r\n\r\nfunction applyRegex(regex, data) {\r\n  regex.lastIndex = data.i;\r\n  var r = regex.exec(data.s);\r\n\r\n  if(r && (r.index === data.i)) {\r\n    data.i = regex.lastIndex;\r\n    return r;\r\n  }\r\n}\r\n\r\nfunction parseParams(data, hdr) {\r\n  hdr.params = hdr.params || {};\r\n\r\n  var re = /\\s*;\\s*([\\w\\-.!%*_+`'~]+)(?:\\s*=\\s*([\\w\\-.!%*_+`'~]+|\"[^\"\\\\]*(\\\\.[^\"\\\\]*)*\"))?/g; \r\n  \r\n  for(var r = applyRegex(re, data); r; r = applyRegex(re, data)) {\r\n    hdr.params[r[1].toLowerCase()] = r[2] || null;\r\n  }\r\n\r\n  return hdr;\r\n}\r\n\r\nfunction parseMultiHeader(parser, d, h) {\r\n  h = h || [];\r\n\r\n  var re = /\\s*,\\s*/g;\r\n  do {\r\n    h.push(parser(d));\r\n  } while(d.i < d.s.length && applyRegex(re, d));\r\n\r\n  return h;\r\n}\r\n\r\nfunction parseGenericHeader(d, h) {\r\n  return h ? h + ',' + d.s : d.s;\r\n}\r\n\r\nfunction parseAOR(data) {\r\n  var r = applyRegex(/((?:[\\w\\-.!%*_+`'~]+)(?:\\s+[\\w\\-.!%*_+`'~]+)*|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")?\\s*\\<\\s*([^>]*)\\s*\\>|((?:[^\\s@\"<]@)?[^\\s;]+)/g, data);\r\n\r\n  return parseParams(data, {name: r[1], uri: r[2] || r[3] || ''});\r\n}\r\nexports.parseAOR = parseAOR;\r\n\r\nfunction parseAorWithUri(data) {\r\n  var r = parseAOR(data);\r\n  r.uri = parseUri(r.uri);\r\n  return r;\r\n}\r\n\r\nfunction parseVia(data) {\r\n  var r = applyRegex(/SIP\\s*\\/\\s*(\\d+\\.\\d+)\\s*\\/\\s*([\\S]+)\\s+([^\\s;:]+)(?:\\s*:\\s*(\\d+))?/g, data);\r\n  return parseParams(data, {version: r[1], protocol: r[2], host: r[3], port: r[4] && +r[4]});\r\n}\r\n\r\nfunction parseCSeq(d) {\r\n  var r = /(\\d+)\\s*([\\S]+)/.exec(d.s);\r\n  return { seq: +r[1], method: unescape(r[2]) };\r\n}\r\n\r\nfunction parseAuthHeader(d) {\r\n  var r1 = applyRegex(/([^\\s]*)\\s+/g, d);\r\n  var a = {scheme: r1[1]};\r\n\r\n  var r2 = applyRegex(/([^\\s,\"=]*)\\s*=\\s*([^\\s,\"]+|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")\\s*/g, d);\r\n  a[r2[1]]=r2[2];\r\n\r\n  while(r2 = applyRegex(/,\\s*([^\\s,\"=]*)\\s*=\\s*([^\\s,\"]+|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")\\s*/g, d)) {\r\n    a[r2[1]]=r2[2];\r\n  }\r\n\r\n  return a;\r\n}\r\n\r\nfunction parseAuthenticationInfoHeader(d) {\r\n  var a = {};\r\n  var r = applyRegex(/([^\\s,\"=]*)\\s*=\\s*([^\\s,\"]+|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")\\s*/g, d);\r\n  a[r[1]]=r[2];\r\n\r\n  while(r = applyRegex(/,\\s*([^\\s,\"=]*)\\s*=\\s*([^\\s,\"]+|\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")\\s*/g, d)) {\r\n    a[r[1]]=r[2];\r\n  }\r\n  return a;\r\n}\r\n\r\nvar compactForm = {\r\n  i: 'call-id',\r\n  m: 'contact',\r\n  e: 'contact-encoding',\r\n  l: 'content-length',\r\n  c: 'content-type',\r\n  f: 'from',\r\n  s: 'subject',\r\n  k: 'supported',\r\n  t: 'to',\r\n  v: 'via'\r\n};\r\n\r\nvar parsers = {\r\n  'to': parseAOR,\r\n  'from': parseAOR,\r\n  'contact': function(v, h) {\r\n    if(v == '*')\r\n      return v;\r\n    else\r\n      return parseMultiHeader(parseAOR, v, h);\r\n  },\r\n  'route': parseMultiHeader.bind(0, parseAorWithUri),\r\n  'record-route': parseMultiHeader.bind(0, parseAorWithUri),\r\n  'path': parseMultiHeader.bind(0, parseAorWithUri),\r\n  'cseq': parseCSeq,\r\n  'content-length': function(v) { return +v.s; },\r\n  'via': parseMultiHeader.bind(0, parseVia),\r\n  'www-authenticate': parseMultiHeader.bind(0, parseAuthHeader),\r\n  'proxy-authenticate': parseMultiHeader.bind(0, parseAuthHeader),\r\n  'authorization': parseMultiHeader.bind(0, parseAuthHeader),\r\n  'proxy-authorization': parseMultiHeader.bind(0, parseAuthHeader),\r\n  'authentication-info': parseAuthenticationInfoHeader,\r\n  'refer-to': parseAOR\r\n};\r\n\r\nfunction parse(data) {\r\n  data = data.split(/\\r\\n(?![ \\t])/);\r\n\r\n  if(data[0] === '')\r\n    return;\r\n\r\n  var m = {};\r\n\r\n  if(!(parseResponse(data[0], m) || parseRequest(data[0], m)))\r\n    return;\r\n\r\n  m.headers = {};\r\n\r\n  for(var i = 1; i < data.length; ++i) {\r\n    var r = data[i].match(/^([\\S]*?)\\s*:\\s*([\\s\\S]*)$/);\r\n    if(!r) {\r\n      return;\r\n    }\r\n\r\n    var name = unescape(r[1]).toLowerCase();\r\n    name = compactForm[name] || name;\r\n\r\n    try {\r\n      m.headers[name] = (parsers[name] || parseGenericHeader)({s:r[2], i:0}, m.headers[name]);\r\n    }\r\n    catch(e) {}\r\n  }\r\n\r\n  return m;\r\n}\r\n\r\nfunction parseUri(s) {\r\n  if(typeof s === 'object')\r\n    return s;\r\n\r\n  var re = /^(sips?):(?:([^\\s>:@]+)(?::([^\\s@>]+))?@)?([\\w\\-\\.]+)(?::(\\d+))?((?:;[^\\s=\\?>;]+(?:=[^\\s?\\;]+)?)*)(?:\\?(([^\\s&=>]+=[^\\s&=>]+)(&[^\\s&=>]+=[^\\s&=>]+)*))?$/;\r\n\r\n  var r = re.exec(s);\r\n\r\n  if(r) {\r\n    return {\r\n      schema: r[1],\r\n      user: r[2],\r\n      password: r[3],\r\n      host: r[4],\r\n      port: +r[5],\r\n      params: (r[6].match(/([^;=]+)(=([^;=]+))?/g) || [])\r\n        .map(function(s) { return s.split('='); })\r\n        .reduce(function(params, x) { params[x[0]]=x[1] || null; return params;}, {}),\r\n      headers: ((r[7] || '').match(/[^&=]+=[^&=]+/g) || [])\r\n        .map(function(s){ return s.split('=') })\r\n        .reduce(function(params, x) { params[x[0]]=x[1]; return params; }, {})\r\n    }\r\n  }\r\n}\r\n\r\nexports.parseUri = parseUri;\r\n\r\nfunction stringifyVersion(v) {\r\n  return v || '2.0';\r\n}\r\n\r\nfunction stringifyParams(params) {\r\n  var s = '';\r\n  for(var n in params) {\r\n      s += ';'+n+(params[n]?'='+params[n]:'');\r\n  }\r\n\r\n  return s;\r\n}\r\n\r\nfunction stringifyUri(uri) {\r\n  if(typeof uri === 'string')\r\n    return uri;\r\n\r\n  var s = (uri.schema || 'sip') + ':';\r\n\r\n  if(uri.user) {\r\n    if(uri.password)\r\n      s += uri.user + ':' + uri.password + '@';\r\n    else\r\n      s += uri.user + '@';\r\n  }\r\n\r\n  s += uri.host;\r\n\r\n  if(uri.port)\r\n    s += ':' + uri.port;\r\n\r\n  if(uri.params)\r\n    s += stringifyParams(uri.params);\r\n\r\n  if(uri.headers) {\r\n    var h = Object.keys(uri.headers).map(function(x){return x+'='+uri.headers[x];}).join('&');\r\n    if(h.length)\r\n      s += '?' + h; \r\n  }\r\n  return s;\r\n}\r\n\r\nexports.stringifyUri = stringifyUri;\r\n\r\nfunction stringifyAOR(aor) {\r\n  return (aor.name || '') + ' <' + stringifyUri(aor.uri) + '>'+stringifyParams(aor.params); \r\n}\r\n\r\nfunction stringifyAuthHeader(a) {\r\n  var s = [];\r\n\r\n  for(var n in a) {\r\n    if(n !== 'scheme' && a[n] !== undefined) {\r\n      s.push(n + '=' + a[n]);\r\n    }\r\n  }\r\n\r\n  return a.scheme ? a.scheme + ' ' + s.join(',') : s.join(',');\r\n}\r\n\r\nexports.stringifyAuthHeader = stringifyAuthHeader;\r\n\r\nvar stringifiers = {\r\n  via: function(h) {\r\n    return h.map(function(via) {\r\n      if(via.host) {\r\n        return 'Via: SIP/'+stringifyVersion(via.version)+'/'+via.protocol.toUpperCase()+' '+via.host+(via.port?':'+via.port:'')+stringifyParams(via.params)+'\\r\\n';\r\n      }\r\n      else {\r\n        return '';\r\n      }\r\n    }).join('');\r\n  },\r\n  to: function(h) {\r\n    return 'To: '+stringifyAOR(h) + '\\r\\n';\r\n   },\r\n  from: function(h) {\r\n    return 'From: '+stringifyAOR(h)+'\\r\\n';\r\n  },\r\n  contact: function(h) { \r\n    return 'Contact: '+ ((h !== '*' && h.length) ? h.map(stringifyAOR).join(', ') : '*') + '\\r\\n';\r\n  },\r\n  route: function(h) {\r\n    return h.length ? 'Route: ' + h.map(stringifyAOR).join(', ') + '\\r\\n' : '';\r\n  },\r\n  'record-route': function(h) {\r\n    return h.length ? 'Record-Route: ' + h.map(stringifyAOR).join(', ') + '\\r\\n' : '';\r\n  },\r\n  'path': function(h) { \r\n    return h.length ? 'Path: ' + h.map(stringifyAOR).join(', ') + '\\r\\n' : '';\r\n  },\r\n  cseq: function(cseq) { \r\n    return 'CSeq: '+cseq.seq+' '+cseq.method+'\\r\\n';\r\n  },\r\n  'www-authenticate': function(h) { \r\n    return h.map(function(x) { return 'WWW-Authenticate: '+stringifyAuthHeader(x)+'\\r\\n'; }).join('');\r\n  },\r\n  'proxy-authenticate': function(h) { \r\n    return h.map(function(x) { return 'Proxy-Authenticate: '+stringifyAuthHeader(x)+'\\r\\n'; }).join('');\r\n  },\r\n  'authorization': function(h) {\r\n    return h.map(function(x) { return 'Authorization: ' + stringifyAuthHeader(x) + '\\r\\n'}).join('');\r\n  },\r\n  'proxy-authorization': function(h) {\r\n    return h.map(function(x) { return 'Proxy-Authorization: ' + stringifyAuthHeader(x) + '\\r\\n'}).join('');; \r\n  },\r\n  'authentication-info': function(h) {\r\n    return 'Authentication-Info: ' + stringifyAuthHeader(h) + '\\r\\n';\r\n  },\r\n  'refer-to': function(h) { return 'Refer-To: ' + stringifyAOR(h) + '\\r\\n'; }\r\n};\r\n\r\nfunction prettifyHeaderName(s) {\r\n  if(s == 'call-id') return 'Call-ID';\r\n\r\n  return s.replace(/\\b([a-z])/g, function(a) { return a.toUpperCase(); });\r\n}\r\n\r\nfunction stringify(m) {\r\n  var s;\r\n  if(m.status) {\r\n    s = 'SIP/' + stringifyVersion(m.version) + ' ' + m.status + ' ' + m.reason + '\\r\\n';\r\n  }\r\n  else {\r\n    s = m.method + ' ' + stringifyUri(m.uri) + ' SIP/' + stringifyVersion(m.version) + '\\r\\n';\r\n  }\r\n\r\n  m.headers['content-length'] = (m.content || '').length;\r\n\r\n  for(var n in m.headers) {\r\n    if(typeof m.headers[n] !== \"undefined\") {\r\n      if(typeof m.headers[n] === 'string' || !stringifiers[n]) \r\n        s += prettifyHeaderName(n) + ': ' + m.headers[n] + '\\r\\n';\r\n      else\r\n        s += stringifiers[n](m.headers[n], n);\r\n    }\r\n  }\r\n  \r\n  s += '\\r\\n';\r\n\r\n  if(m.content)\r\n    s += m.content;\r\n\r\n  return s;\r\n}\r\n\r\nexports.stringify = stringify;\r\n\r\nfunction makeResponse(rq, status, reason, extension) {\r\n  var rs = {\r\n    status: status,\r\n    reason: reason || '',\r\n    version: rq.version,\r\n    headers: {\r\n      via: rq.headers.via,\r\n      to: rq.headers.to,\r\n      from: rq.headers.from,\r\n      'call-id': rq.headers['call-id'],\r\n      cseq: rq.headers.cseq\r\n    }\r\n  };\r\n\r\n  if(extension) {\r\n    if(extension.headers) Object.keys(extension.headers).forEach(function(h) { rs.headers[h] = extension.headers[h]; });\r\n    rs.content = extension.content;\r\n  }\r\n\r\n  return rs;\r\n}\r\n\r\nexports.makeResponse = makeResponse;\r\n\r\nfunction clone(o, deep) {\r\n  if(o !== null && typeof o === 'object') {\r\n    var r = Array.isArray(o) ? [] : {};\r\n    Object.keys(o).forEach(function(k) { r[k] = deep ? clone(o[k], deep): o[k]; });\r\n    return r;\r\n  }\r\n\r\n  return o;\r\n}\r\n\r\nexports.copyMessage = function(msg, deep) {\r\n  if(deep) return clone(msg, true);\r\n\r\n  var r = {\r\n    uri: deep ? clone(msg.uri, deep) : msg.uri,\r\n    method: msg.method,\r\n    status: msg.status,\r\n    reason: msg.reason,\r\n    headers: clone(msg.headers, deep),\r\n    content: msg.content\r\n  };\r\n\r\n  // always copy via array \r\n  r.headers.via = clone(msg.headers.via);\r\n\r\n  return r;\r\n}\r\n\r\nfunction defaultPort(proto) {\r\n  return proto.toUpperCase() === 'TLS' ? 5061 : 5060;\r\n}\r\n\r\nfunction makeStreamParser(onMessage, onFlood, maxBytesHeaders, maxContentLength) {\r\n\r\n  onFlood= onFlood || function(){};\r\n  maxBytesHeaders= maxBytesHeaders || 60480;\r\n  maxContentLength= maxContentLength || 604800;\r\n\r\n  var m;\r\n  var r = '';\r\n  \r\n  function headers(data) {\r\n    r += data;\r\n\r\n    if( r.length > maxBytesHeaders ){\r\n\r\n      r = '';\r\n\r\n      onFlood();\r\n\r\n      return;\r\n\r\n    }\r\n\r\n    var a = r.match(/^\\s*([\\S\\s]*?)\\r\\n\\r\\n([\\S\\s]*)$/);\r\n\r\n    if(a) {\r\n      r = a[2];\r\n      m = parse(a[1]);\r\n\r\n      if(m && m.headers['content-length'] !== undefined) {\r\n\r\n        if (m.headers['content-length'] > maxContentLength) {\r\n\r\n          r = '';\r\n\r\n          onFlood();\r\n\r\n        }\r\n\r\n        state = content;\r\n        content('');\r\n      }\r\n      else\r\n        headers('');\r\n    }\r\n  }\r\n\r\n  function content(data) {\r\n    r += data;\r\n\r\n    if(r.length >= m.headers['content-length']) {\r\n      m.content = r.substring(0, m.headers['content-length']);\r\n      \r\n      onMessage(m);\r\n      \r\n      var s = r.substring(m.headers['content-length']);\r\n      state = headers;\r\n      r = '';\r\n      headers(s);\r\n    }\r\n  }\r\n\r\n  var state=headers;\r\n\r\n  return function(data) { state(data); }\r\n\r\n}\r\nexports.makeStreamParser = makeStreamParser;\r\n\r\nfunction parseMessage(s) {\r\n  var r = s.toString('binary').match(/^\\s*([\\S\\s]*?)\\r\\n\\r\\n([\\S\\s]*)$/);\r\n  if(r) {\r\n    var m = parse(r[1]);\r\n\r\n    if(m) {\r\n      if(m.headers['content-length']) {\r\n        var c = Math.max(0, Math.min(m.headers['content-length'], r[2].length));\r\n        m.content = r[2].substring(0, c);\r\n      }\r\n      else {\r\n        m.content = r[2];\r\n      }\r\n      \r\n      return m;\r\n    }\r\n  }\r\n}\r\nexports.parse = parseMessage;\r\n\r\nfunction checkMessage(msg) {\r\n  return (msg.method || (msg.status >= 100 && msg.status <= 999)) &&\r\n    msg.headers &&\r\n    Array.isArray(msg.headers.via) &&\r\n    msg.headers.via.length > 0 &&\r\n    msg.headers['call-id'] &&\r\n    msg.headers.to &&\r\n    msg.headers.from &&\r\n    msg.headers.cseq;\r\n}\r\n\r\nfunction makeStreamTransport(protocol, maxBytesHeaders, maxContentLength, connect, createServer, callback) {\r\n  var remotes = Object.create(null);\r\n  var flows = Object.create(null);\r\n\r\n  function init(stream, remote) {\r\n    var remoteid = [remote.address, remote.port].join(),\r\n      flowid = undefined,\r\n      refs = 0;\r\n\r\n    function register_flow() {\r\n      flowid = [remoteid,stream.localAddress, stream.localPort].join();\r\n      flows[flowid] = remotes[remoteid];\r\n    }\r\n\r\n    var onMessage= function(m) {\r\n\r\n      if(checkMessage(m)) {\r\n        if(m.method) m.headers.via[0].params.received = remote.address;\r\n        callback(m,\r\n          {protocol: remote.protocol, address: stream.remoteAddress, port: stream.remotePort, local: { address: stream.localAddress, port: stream.localPort}},\r\n          stream);\r\n      }\r\n\r\n    };\r\n\r\n    var onFlood= function() {\r\n\r\n      console.log(\"Flood attempt, destroying stream\");\r\n\r\n      stream.destroy();\r\n\r\n    };\r\n\r\n    stream.setEncoding('binary');\r\n    stream.on('data', makeStreamParser( onMessage, onFlood, maxBytesHeaders, maxContentLength));\r\n  \r\n    stream.on('close',    function() {\r\n      if(flowid) delete flows[flowid]; \r\n      delete remotes[remoteid];\r\n    });\r\n    stream.on('connect',  register_flow);\r\n\r\n    stream.on('error',    function() {});\r\n    stream.on('end',      function() { \r\n      if(refs !== 0) stream.emit('error', new Error('remote peer disconnected'));\r\n      stream.end();\r\n    });\r\n\r\n    stream.on('timeout',  function() { if(refs === 0) stream.destroy(); });\r\n    stream.setKeepAlive(true, 60000)\r\n    //stream.setTimeout(120000);\r\n    stream.setMaxListeners(10000);\r\n\r\n    remotes[remoteid] = function(onError) {\r\n      ++refs;\r\n      if(onError) stream.on('error', onError);\r\n\r\n      return {\r\n        release: function() {\r\n          if(onError) stream.removeListener('error', onError);\r\n          if(--refs === 0) stream.emit('no_reference');\r\n        },\r\n        send: function(m) {\r\n          stream.write(stringify(m), 'binary');\r\n        },\r\n        protocol: protocol\r\n      }\r\n    };\r\n\r\n    if(stream.localPort) register_flow();\r\n\r\n    return remotes[remoteid];\r\n  }\r\n\r\n  var server = createServer(function(stream) {\r\n    init(stream, {protocol: protocol, address: stream.remoteAddress, port: stream.remotePort});\r\n  });\r\n\r\n  return {\r\n    open: function(remote, error) {\r\n      var remoteid = [remote.address, remote.port].join();\r\n\r\n      if(remoteid in remotes) return remotes[remoteid](error);\r\n\r\n      return init(connect(remote.port, remote.address), remote)(error);\r\n    },\r\n    get: function(address, error) {\r\n      var c = address.local ? flows[[address.address, address.port, address.local.address, address.local.port].join()]\r\n        : remotes[[address.address, address.port].join()];\r\n\r\n      return c && c(error);\r\n    },\r\n    destroy: function() { if(server) server.close(); }\r\n  };\r\n}\r\n\r\nfunction makeTlsTransport(options, callback) {\r\n  return makeStreamTransport(\r\n    'TLS',\r\n    options.maxBytesHeaders,\r\n    options.maxContentLength,\r\n    function(port, host, callback) { return tls.connect(port, host, options.tls, callback); },\r\n    function(callback) {\r\n      var server = tls.createServer(options.tls, callback);\r\n      server.listen(options.tls_port || 5061, options.address);\r\n      return server;\r\n    },\r\n    callback);\r\n}\r\n\r\nfunction makeTcpTransport(options, callback) {\r\n  return makeStreamTransport(\r\n    'TCP',\r\n    options.maxBytesHeaders,\r\n    options.maxContentLength,\r\n    function(port, host, callback) { return net.connect(port, host, callback); },\r\n    function(callback) {\r\n\r\n    },\r\n    callback);\r\n}\r\n\r\nfunction makeUdpTransport(options, callback) {\r\n  function onMessage(data, rinfo) {\r\n    var msg = parseMessage(data);\r\n\r\n    if(msg && checkMessage(msg)) {\r\n      if(msg.method) {\r\n        msg.headers.via[0].params.received = rinfo.address;\r\n        if(msg.headers.via[0].params.hasOwnProperty('rport'))\r\n          msg.headers.via[0].params.rport = rinfo.port;\r\n      }\r\n\r\n      callback(msg, {protocol: 'UDP', address: rinfo.address, port: rinfo.port, local: {address: address, port: port}});\r\n    }\r\n  }\r\n\r\n  var address = options.address || '0.0.0.0';\r\n  var port = options.port || 5060;\r\n\r\n  var socket = dgram.createSocket(net.isIPv6(address) ? 'udp6' : 'udp4', onMessage);\r\n  socket.bind(port, address);\r\n\r\n  function open(remote, error) {\r\n    return {\r\n      send: function(m) {\r\n        var s = stringify(m);\r\n        socket.send(new Buffer.from(s, 'binary'), 0, s.length, remote.port, remote.address);\r\n      },\r\n      protocol: 'UDP',\r\n      release : function() {}\r\n    };\r\n  };\r\n\r\n  return {\r\n    open: open,\r\n    get: open,\r\n    destroy: function() { socket.close(); }\r\n  }\r\n}\r\n\r\nfunction makeTransport(options, callback) {\r\n  var protocols = {};\r\n\r\n  var callbackAndLog = callback;\r\n  if(options.logger && options.logger.recv) {\r\n    callbackAndLog = function(m, remote, stream) {\r\n      options.logger.recv(m, remote);\r\n      callback(m, remote, stream);\r\n    }\r\n  }\r\n\r\n  if(options.udp === undefined || options.udp)\r\n    protocols.UDP = makeUdpTransport(options, callbackAndLog);\r\n  if(options.tcp === undefined || options.tcp)\r\n    protocols.TCP = makeTcpTransport(options, callbackAndLog);\r\n  if(options.tls)\r\n    protocols.TLS = makeTlsTransport(options, callbackAndLog);\r\n\r\n  function wrap(obj, target) {\r\n    return Object.create(obj, {send: {value: function(m) {\r\n      if(m.method) {\r\n        m.headers.via[0].host = options.publicAddress || options.address || options.hostname || os.hostname();\r\n        m.headers.via[0].port = options.port || defaultPort(this.protocol);\r\n        m.headers.via[0].protocol = this.protocol;\r\n\r\n        if(this.protocol === 'UDP' && (!options.hasOwnProperty('rport') || options.rport)) {\r\n          m.headers.via[0].params.rport = null;\r\n        }\r\n      }\r\n      options.logger && options.logger.send && options.logger.send(m, target);\r\n      obj.send(m);\r\n    }}});\r\n  }\r\n\r\n  return {\r\n    open: function(target, error) {\r\n      return wrap(protocols[target.protocol.toUpperCase()].open(target, error), target);\r\n    },\r\n    get: function(target, error) {\r\n      var flow = protocols[target.protocol.toUpperCase()].get(target, error);\r\n      return flow && wrap(flow, target);\r\n    },\r\n    send: function(target, message) {\r\n      var cn = this.open(target);\r\n      try {\r\n        cn.send(message);\r\n      }\r\n      finally {\r\n        cn.release();\r\n      }\r\n    },\r\n    destroy: function() { \r\n      var protos = protocols;\r\n      protocols = [];\r\n      Object.keys(protos).forEach(function(key) { protos[key].destroy(); });\r\n    },\r\n  };\r\n}\r\n\r\nexports.makeTransport = makeTransport;\r\n\r\nfunction makeWellBehavingResolver(resolve) {\r\n  var outstanding = Object.create(null);\r\n  \r\n  return function(name, cb) {\r\n    if(outstanding[name]) {\r\n      outstanding[name].push(cb);\r\n    }\r\n    else {\r\n      outstanding[name] = [cb];\r\n      \r\n      resolve(name, function() {\r\n        var o = outstanding[name];\r\n        delete outstanding[name];\r\n        var args = arguments;\r\n        o.forEach(function(x) { x.apply(null, args); });\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nvar resolveSrv = makeWellBehavingResolver(dns.resolveSrv);\r\nvar resolve4 = makeWellBehavingResolver(dns.resolve4);\r\nvar resolve6 = makeWellBehavingResolver(dns.resolve6);\r\n\r\nfunction resolve(uri, action) {\r\n  if(uri.params.transport === 'ws')\r\n    return action([{protocol: uri.schema === 'sips' ? 'WSS' : 'WS', host: uri.host, port: uri.port || (uri.schema === 'sips' ? 433 : 80)}]);\r\n\r\n  if(net.isIP(uri.host)) {\r\n    var protocol = uri.params.transport || 'UDP';\r\n    return action([{protocol: protocol, address: uri.host, port: uri.port || defaultPort(protocol)}]);\r\n  }\r\n  \r\n  function resolve46(host, cb) {\r\n    resolve4(host, function(e4, a4) {\r\n      resolve6(host, function(e6, a6) {\r\n        if((a4 || a6) && (a4 || a6).length)\r\n          cb(null, (a4 || []).concat(a6 || []));\r\n        else\r\n          cb(e4 || e6, []);\r\n      });\r\n    });\r\n  }\r\n\r\n  if(uri.port) {\r\n    var protocols = uri.params.transport ? [uri.params.transport] : ['UDP', 'TCP', 'TLS'];\r\n    \r\n    resolve46(uri.host, function(err, address) {\r\n      address = (address || []).map(function(x) { return protocols.map(function(p) { return { protocol: p, address: x, port: uri.port || defaultPort(p)};});})\r\n        .reduce(function(arr,v) { return arr.concat(v); }, []);\r\n        action(address);\r\n    });\r\n  }\r\n  else {\r\n    var protocols = uri.params.transport ? [uri.params.transport] : ['tcp', 'udp', 'tls'];\r\n  \r\n    var n = protocols.length;\r\n    var addresses = [];\r\n\r\n    protocols.forEach(function(proto) {\r\n      resolveSrv('_sip._'+proto+'.'+uri.host, function(e, r) {\r\n        --n;\r\n        \r\n        if(Array.isArray(r)) {\r\n          n += r.length;\r\n          r.forEach(function(srv) {\r\n            resolve46(srv.name, function(e, r) {\r\n              addresses = addresses.concat((r||[]).map(function(a) { return {protocol: proto, address: a, port: srv.port};}));\r\n            \r\n              if((--n)===0) // all outstanding requests has completed\r\n                action(addresses);\r\n            });\r\n          });\r\n        }\r\n        else if(0 === n) {\r\n          if(addresses.length) {\r\n            action(addresses);\r\n          }\r\n          else {\r\n            // all srv requests failed\r\n            resolve46(uri.host, function(err, address) {\r\n              address = (address || []).map(function(x) { return protocols.map(function(p) { return { protocol: p, address: x, port: uri.port || defaultPort(p)};});})\r\n                .reduce(function(arr,v) { return arr.concat(v); }, []);\r\n              action(address);\r\n            });\r\n          }\r\n        }\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\nexports.resolve = resolve;\r\n\r\n//transaction layer\r\nfunction generateBranch() {\r\n  return ['z9hG4bK',Math.round(Math.random()*1000000)].join('');\r\n}\r\n\r\nexports.generateBranch = generateBranch;\r\n\r\nfunction makeSM() {\r\n  var state;\r\n\r\n  return {\r\n    enter: function(newstate) {\r\n      if(state && state.leave)\r\n        state.leave();\r\n      \r\n      state = newstate;\r\n      Array.prototype.shift.apply(arguments);\r\n      if(state.enter) \r\n        state.enter.apply(this, arguments);\r\n    },\r\n    signal: function(s) {\r\n      if(state && state[s]) \r\n        state[Array.prototype.shift.apply(arguments)].apply(state, arguments);\r\n    }\r\n  };\r\n}\r\n\r\nfunction createInviteServerTransaction(transport, cleanup) {\r\n  var sm = makeSM();\r\n  var rs;\r\n    \r\n  var proceeding = {\r\n    message: function() { \r\n      if(rs) transport(rs);\r\n    },\r\n    send: function(message) {\r\n      rs = message;\r\n\r\n      if(message.status >= 300)\r\n        sm.enter(completed);\r\n      else if(message.status >= 200)\r\n        sm.enter(accepted);\r\n      \r\n      transport(rs);\r\n    }\r\n  }\r\n\r\n  var g, h;\r\n  var completed = {\r\n    enter: function () {\r\n      g = setTimeout(function retry(t) { \r\n        g = setTimeout(retry, t*2, t*2);\r\n        transport(rs)\r\n      }, 500, 500);\r\n      h = setTimeout(sm.enter.bind(sm, terminated), 32000);\r\n    },\r\n    leave: function() {\r\n      clearTimeout(g);\r\n      clearTimeout(h);\r\n    },\r\n    message: function(m) {\r\n      if(m.method === 'ACK')\r\n        sm.enter(confirmed)\r\n      else\r\n        transport(rs);\r\n    }\r\n  }\r\n \r\n  var timer_i; \r\n  var confirmed = {\r\n    enter: function() { timer_i = setTimeout(sm.enter.bind(sm, terminated), 5000);},\r\n    leave: function() { clearTimeout(timer_i); }\r\n  };\r\n\r\n  var l;\r\n  var accepted = {\r\n    enter: function() { l = setTimeout(sm.enter.bind(sm, terminated), 32000);},\r\n    leave: function() { clearTimeout(l); },\r\n    send: function(m) { \r\n      rs = m;\r\n      transport(rs);\r\n    }  \r\n  };\r\n\r\n  var terminated = {enter: cleanup};\r\n  \r\n  sm.enter(proceeding);\r\n\r\n  return {send: sm.signal.bind(sm, 'send'), message: sm.signal.bind(sm,'message'), shutdown: function() { sm.enter(terminated); }};\r\n}\r\n\r\nfunction createServerTransaction(transport, cleanup) {\r\n  var sm = makeSM();\r\n  var rs;\r\n\r\n  var trying = {\r\n    message: function() { if(rs) transport(rs); },\r\n    send: function(m) {\r\n      rs = m;\r\n      transport(m);\r\n      if(m.status >= 200) sm.enter(completed);\r\n    }\r\n  }; \r\n\r\n  var j;\r\n  var completed = {\r\n    message: function() { transport(rs); },\r\n    enter: function() { j = setTimeout(function() { sm.enter(terminated); }, 32000); },\r\n    leave: function() { clearTimeout(j); }\r\n  };\r\n\r\n  var terminated = {enter: cleanup};\r\n\r\n  sm.enter(trying);\r\n\r\n  return {send: sm.signal.bind(sm, 'send'), message: sm.signal.bind(sm, 'message'), shutdown: function() { sm.enter(terminated); }};\r\n}\r\n\r\nfunction createInviteClientTransaction(rq, transport, tu, cleanup, options) {\r\n  var sm = makeSM();\r\n\r\n  var a, b;\r\n  var calling = {\r\n    enter: function() {\r\n      transport(rq);\r\n\r\n      if(!transport.reliable) {\r\n        a = setTimeout(function resend(t) {\r\n          transport(rq);\r\n          a = setTimeout(resend, t*2, t*2);\r\n        }, 500, 500);\r\n      }\r\n        \r\n      b = setTimeout(function() {\r\n        tu(makeResponse(rq, 408));\r\n        sm.enter(terminated);\r\n      }, 32000);\r\n    },\r\n    leave: function() {\r\n      clearTimeout(a);\r\n      clearTimeout(b);\r\n    },\r\n    message: function(message) {\r\n      tu(message);\r\n\r\n      if(message.status < 200)\r\n        sm.enter(proceeding);\r\n      else if(message.status < 300) \r\n         sm.enter(accepted);\r\n      else\r\n        sm.enter(completed, message);\r\n    }\r\n  };\r\n\r\n  var ringTimeLimit;\r\n  var proceeding = {\r\n    enter: function() {\r\n      if(options.ringTimeLimit !== 0) {\r\n        ringTimeLimit = setTimeout(function() {\r\n          tu(makeResponse(rq, 408));\r\n          sm.enter(terminated);\r\n        }, options.ringTimeLimit || 600000);\r\n      }\r\n    },\r\n    leave : function() {\r\n      clearTimeout(ringTimeLimit);\r\n    },\r\n    message: function(message) {\r\n      tu(message);\r\n      \r\n      if(message.status >= 300)\r\n        sm.enter(completed, message);\r\n      else if(message.status >= 200)\r\n        sm.enter(accepted);\r\n    }\r\n  };\r\n\r\n  var ack = {\r\n    method: 'ACK',\r\n    uri: rq.uri,\r\n    headers: {\r\n      from: rq.headers.from,\r\n      cseq: {method: 'ACK', seq: rq.headers.cseq.seq},\r\n      'call-id': rq.headers['call-id'],\r\n      via: [rq.headers.via[0]],\r\n      'max-forwards': (options && options['max-forwards']) || 70 \r\n    }\r\n  };\r\n\r\n  var d;\r\n  var completed = {\r\n    enter: function(rs) {\r\n      ack.headers.to=rs.headers.to;\r\n      transport(ack);\r\n      d = setTimeout(sm.enter.bind(sm, terminated), 32000);\r\n    },\r\n    leave: function() { clearTimeout(d); },\r\n    message: function(message, remote) {\r\n      if(remote) transport(ack);  // we don't want to ack internally generated messages\r\n    }\r\n  };\r\n\r\n  var timer_m;\r\n  var accepted = {\r\n    enter: function() {\r\n      timer_m = setTimeout(function() { sm.enter(terminated); }, 32000);\r\n    },\r\n    leave: function() { clearTimeout(timer_m); },\r\n    message: function(m) {\r\n      if(m.status >= 200 && m.status <= 299)\r\n        tu(m);\r\n    }\r\n  };\r\n\r\n  var terminated = {enter: cleanup};\r\n \r\n  process.nextTick(function(){ sm.enter(calling); });\r\n \r\n  return {message: sm.signal.bind(sm, 'message'), shutdown: function() { sm.enter(terminated); }};\r\n}\r\n\r\nfunction createClientTransaction(rq, transport, tu, cleanup) {  \r\n  assert.ok(rq.method !== 'INVITE');\r\n\r\n  var sm = makeSM();\r\n  \r\n  var e, f;\r\n  var trying = {\r\n    enter: function() { \r\n      transport(rq);\r\n      if(!transport.reliable)\r\n        e = setTimeout(function() { sm.signal('timerE', 500); }, 500);\r\n      f = setTimeout(function() { sm.signal('timerF'); }, 32000);\r\n    },\r\n    leave: function() {\r\n      clearTimeout(e);\r\n      clearTimeout(f);\r\n    },\r\n    message: function(message, remote) {\r\n      if(message.status >= 200)\r\n        sm.enter(completed);\r\n      else\r\n        sm.enter(proceeding);\r\n      tu(message);\r\n    },\r\n    timerE: function(t) {\r\n      transport(rq);\r\n      e = setTimeout(function() { sm.signal('timerE', t*2); }, t*2);\r\n    },\r\n    timerF: function() {\r\n      tu(makeResponse(rq, 408));\r\n      sm.enter(terminated);\r\n    }\r\n  };\r\n\r\n  var ringTimeLimit;\r\n  var proceeding = {\r\n    enter: function() {\r\n      if(options.ringTimeLimit !== 0) {\r\n        ringTimeLimit = setTimeout(function() {\r\n          tu(makeResponse(rq, 408));\r\n          sm.enter(terminated);\r\n        }, options.ringTimeLimit || 600000);\r\n      }\r\n    },\r\n    leave : function() {\r\n      clearTimeout(ringTimeLimit);\r\n    },\r\n    message: function(message, remote) {\r\n      if(message.status >= 200)\r\n        sm.enter(completed);\r\n      tu(message);\r\n    }\r\n  };\r\n\r\n  var k;\r\n  var completed = {\r\n    enter: function() { k = setTimeout(function() { sm.enter(terminated); }, 5000); },\r\n    leave: function() { clearTimeout(k); }\r\n  };\r\n\r\n  var terminated = {enter: cleanup};\r\n\r\n  process.nextTick(function() { sm.enter(trying); });\r\n\r\n  return {message: sm.signal.bind(sm, 'message'), shutdown: function() { sm.enter(terminated); }};\r\n}\r\n\r\nfunction makeTransactionId(m) {\r\n  if(m.method === 'ACK')\r\n    return ['INVITE', m.headers['call-id'], m.headers.via[0].params.branch].join();\r\n  return [m.headers.cseq.method, m.headers['call-id'], m.headers.via[0].params.branch].join();\r\n}\r\n\r\nfunction makeTransactionLayer(options, transport) {\r\n  var server_transactions = Object.create(null);\r\n  var client_transactions = Object.create(null);\r\n\r\n  return {\r\n    createServerTransaction: function(rq, cn) {\r\n      var id = makeTransactionId(rq);\r\n      \r\n      return server_transactions[id] = (rq.method === 'INVITE' ? createInviteServerTransaction : createServerTransaction)(\r\n        cn.send.bind(cn),\r\n        function() { \r\n          delete server_transactions[id];\r\n          cn.release();\r\n        });\r\n    },\r\n    createClientTransaction: function(connection, rq, callback) {\r\n      if(rq.method !== 'CANCEL') rq.headers.via[0].params.branch = generateBranch();\r\n      \r\n      \r\n      if(typeof rq.headers.cseq !== 'object')\r\n        rq.headers.cseq = parseCSeq({s: rq.headers.cseq, i:0});\r\n\r\n      var send = connection.send.bind(connection);\r\n      send.reliable = connection.protocol.toUpperCase() !== 'UDP';\r\n      \r\n      var id = makeTransactionId(rq);\r\n      return client_transactions[id] = \r\n        (rq.method === 'INVITE' ? createInviteClientTransaction : createClientTransaction)(rq, send, callback, function() { \r\n          delete client_transactions[id];\r\n          connection.release();\r\n        }, \r\n        options);\r\n    },\r\n    getServer: function(m) {\r\n      return server_transactions[makeTransactionId(m)];\r\n    },\r\n    getClient: function(m) {\r\n      return client_transactions[makeTransactionId(m)];\r\n    },\r\n    destroy: function() {\r\n      Object.keys(client_transactions).forEach(function(x) { client_transactions[x].shutdown(); });\r\n      Object.keys(server_transactions).forEach(function(x) { server_transactions[x].shutdown(); });\r\n    }\r\n  };\r\n}\r\n\r\nexports.makeTransactionLayer = makeTransactionLayer;\r\n\r\nfunction sequentialSearch(transaction, connect, addresses, rq, callback) {\r\n  if(rq.method !== 'CANCEL') {\r\n    if(!rq.headers.via) rq.headers.via = [];\r\n    rq.headers.via.unshift({params:{}});\r\n  }\r\n\r\n  var onresponse;\r\n  var lastStatusCode;\r\n  function next() {\r\n    onresponse = searching;\r\n    \r\n    if(addresses.length > 0) {\r\n      try {\r\n        var address = addresses.shift();\r\n        var client = transaction(connect(address, function(err) {\r\n          if(err) {\r\n            console.log(\"err: \", err);\r\n          }\r\n          client.message(makeResponse(rq, 503));\r\n        }), rq, function() { onresponse.apply(null, arguments); }); \r\n      }\r\n      catch(e) {\r\n        onresponse(address.local ? makeResponse(rq, 430) : makeResponse(rq, 503));  \r\n      }\r\n    }\r\n    else {\r\n      onresponse = callback;\r\n      onresponse(makeResponse(rq, lastStatusCode || 404));\r\n    }\r\n  }\r\n\r\n  function searching(rs) {\r\n    lastStatusCode = rs.status;\r\n    if(rs.status === 503)\r\n      return next();\r\n    else if(rs.status > 100)\r\n      onresponse = callback;\r\n    \r\n    callback(rs);\r\n  }\r\n \r\n  next();\r\n}\r\n\r\nexports.create = function(options, callback) {\r\n  var errorLog = (options.logger && options.logger.error) || function() {};\r\n\r\n  var transport = makeTransport(options, function(m,remote) {\r\n    try {\r\n      var t = m.method ? transaction.getServer(m) : transaction.getClient(m);\r\n\r\n      if(!t) {\r\n        if(m.method && m.method !== 'ACK') {\r\n          var t = transaction.createServerTransaction(m, transport.get(remote));\r\n          try {\r\n            callback(m,remote);\r\n          } catch(e) {\r\n            t.send(makeResponse(m, '500', 'Internal Server Error'));\r\n            throw e;\r\n          } \r\n        }\r\n        else if(m.method === 'ACK') {\r\n          callback(m,remote);\r\n        }\r\n      }\r\n      else {\r\n        t.message && t.message(m, remote);\r\n      }\r\n    } \r\n    catch(e) {\r\n      errorLog(e);\r\n    }\r\n  });\r\n  \r\n  var transaction = makeTransactionLayer(options, transport.open.bind(transport));\r\n  var hostname = options.publicAddress || options.address || options.hostname || os.hostname();\r\n  var port = options.port || 5060;\r\n  var rbytes = crypto.randomBytes(20);\r\n\r\n  function encodeFlowToken(flow) {\r\n    var s = [flow.protocol, flow.address, flow.port, flow.local.address, flow.local.port].join();\r\n    var h = crypto.createHmac('sha1', rbytes);\r\n    h.update(s);\r\n    return toBase64([h.digest('base64'), s].join());\r\n  }\r\n\r\n  function decodeFlowToken(token) {\r\n    var s = (new Buffer.from(token, 'base64')).toString('ascii').split(',');\r\n    if(s.length != 6) return;\r\n\r\n    var flow = {protocol: s[1], address: s[2], port: +s[3], local: {address: s[4], port: +s[5]}};\r\n\r\n    return encodeFlowToken(flow) == token ? flow : undefined;\r\n  }       \r\n  \r\n  return {\r\n    send: function(m, callback) {\r\n      if(m.method === undefined) {\r\n        var t = transaction.getServer(m);\r\n        t && t.send && t.send(m);\r\n      }\r\n      else {\r\n        var hop = parseUri(m.uri);\r\n\r\n        if(typeof m.headers.route === 'string') {\r\n          try {\r\n            m.headers.route = parsers.route({s: m.headers.route, i:0});\r\n          }\r\n          catch(e) {\r\n            m.headers.route = undefined;\r\n          }\r\n        }\r\n\r\n        if(m.headers.route && m.headers.route.length > 0) {\r\n          hop = parseUri(m.headers.route[0].uri);\r\n          if(hop.host === hostname && hop.port === port) {\r\n            m.headers.route.shift();\r\n          } \r\n          else if(hop.params.lr === undefined ) {\r\n            m.headers.route.shift();\r\n            m.headers.route.push({uri: m.uri});\r\n            m.uri = hop;\r\n          }\r\n        }\r\n\r\n        (function(callback) {\r\n          if(hop.host === hostname && hop.port === port) {\r\n            var flow = decodeFlowToken(hop.user);\r\n            callback(flow ? [flow] : []);\r\n          }\r\n          else\r\n            resolve(hop, callback);\r\n        })(function(addresses) {\r\n          if(m.method === 'ACK') {\r\n            if(!Array.isArray(m.headers.via))\r\n              m.headers.via = [];\r\n\r\n            if(m.headers.via.length === 0)\r\n              m.headers.via.unshift({params: {branch: generateBranch()}});\r\n            \r\n            if(addresses.length === 0) {\r\n              errorLog(new Error(\"ACK: couldn't resolve \" + stringifyUri(m.uri)));\r\n              return;\r\n            }\r\n\r\n            var cn = transport.open(addresses[0], errorLog);\r\n            try {\r\n              cn.send(m);\r\n            } \r\n            catch(e) {\r\n              errorLog(e);\r\n            }\r\n            finally {\r\n              cn.release();\r\n            }\r\n          }\r\n          else\r\n            sequentialSearch(transaction.createClientTransaction.bind(transaction), transport.open.bind(transport), addresses, m, callback || function() {}); \r\n        });\r\n      }\r\n    },\r\n    encodeFlowUri: function(flow) {\r\n      return {schema: flow.protocol === 'TLS' ? 'sips' : 'sip', user: encodeFlowToken(flow), host: hostname, params:{}};\r\n    },\r\n    decodeFlowUri: function(uri) {\r\n      uri = parseUri(uri);\r\n      return uri.host === hostname ? decodeFlowToken(uri.user) : undefined;\r\n    },\r\n    isFlowUri: function(uri) {\r\n      return !!!decodeFlowUri(uri);\r\n    },\r\n    hostname: function() { return hostname; },\r\n    destroy: function() {\r\n      transaction.destroy();\r\n      transport.destroy();\r\n    }\r\n  } \r\n}\r\n\r\nexports.start = function(options, callback) {\r\n  var r = exports.create(options, callback);\r\n\r\n  exports.send = r.send;\r\n  exports.stop = r.destroy;\r\n  exports.encodeFlowUri = r.encodeFlowUri;\r\n  exports.decodeFlowUri = r.decodeFlowUri;\r\n  exports.isFlowUri = r.isFlowUri;\r\n  exports.hostname = r.hostname;\r\n}\r\n\r\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SipManager = exports.SipRequestHandler = exports.TimeoutError = void 0;\nexports.timeoutPromise = timeoutPromise;\nexports.generateUuid = generateUuid;\nexports.randomInteger = randomInteger;\nexports.randomString = randomString;\nexports.decodeSrtpOptions = decodeSrtpOptions;\nexports.getRtpDescription = getRtpDescription;\nexports.parseRtpDescription = parseRtpDescription;\n// shameless copied, inlined and trimmed down version of https://github.com/koush/scrypted/blob/main/plugins/sip/src/sip-manager.ts\nconst sip_1 = __importStar(require(\"@slyoldfox/sip\"));\nconst sdp_1 = __importDefault(require(\"sdp\"));\nconst crypto_1 = __importDefault(require(\"crypto\"));\nclass TimeoutError extends Error {\n    constructor(promise) {\n        super('Operation Timed Out');\n        this.promise = promise;\n    }\n}\nexports.TimeoutError = TimeoutError;\nfunction timeoutPromise(timeout, promise) {\n    return new Promise((resolve, reject) => {\n        const t = setTimeout(() => reject(new TimeoutError(promise)), timeout);\n        promise\n            .then(v => {\n            clearTimeout(t);\n            resolve(v);\n        })\n            .catch(e => {\n            clearTimeout(t);\n            reject(e);\n        });\n    });\n}\nfunction generateUuid() {\n    return crypto_1.default.randomUUID();\n}\nfunction randomInteger() {\n    return Math.floor(Math.random() * 99999999) + 100000;\n}\nfunction randomString(length) {\n    const uuid = generateUuid();\n    return uuid.replace(/-/g, '').substring(0, length).toLowerCase();\n}\nfunction decodeSrtpOptions(encodedOptions) {\n    const crypto = Buffer.from(encodedOptions, 'base64');\n    return {\n        srtpKey: crypto.subarray(0, 16),\n        srtpSalt: crypto.subarray(16, 30),\n    };\n}\n/**\n * Allows handling of SIP messages\n */\nclass SipRequestHandler {\n}\nexports.SipRequestHandler = SipRequestHandler;\nfunction getRandomId() {\n    return Math.floor(Math.random() * 1e6).toString();\n}\nfunction getRtpDescription(console, sections, mediaType) {\n    try {\n        const section = sections.find((s) => s.startsWith('m=' + mediaType));\n        if (section === undefined) {\n            return {\n                port: 0,\n                rtcpPort: 0,\n                srtpKey: undefined,\n                srtpSalt: undefined\n            };\n        }\n        const { port } = sdp_1.default.parseMLine(section), lines = sdp_1.default.splitLines(section), rtcpLine = lines.find((l) => l.startsWith('a=rtcp:')), cryptoLine = lines.find((l) => l.startsWith('a=crypto')), rtcpMuxLine = lines.find((l) => l.startsWith('a=rtcp-mux')), ssrcLine = lines.find((l) => l.startsWith('a=ssrc')), iceUFragLine = lines.find((l) => l.startsWith('a=ice-ufrag')), icePwdLine = lines.find((l) => l.startsWith('a=ice-pwd')), encodedCrypto = cryptoLine?.match(/inline:(\\S*)/)[1] || undefined;\n        let rtcpPort;\n        if (rtcpMuxLine) {\n            rtcpPort = port; // rtcp-mux would cause rtcpLine to not be present\n        }\n        else {\n            rtcpPort = (rtcpLine && Number(rtcpLine.match(/rtcp:(\\S*)/)?.[1])) || port + 1; // if there is no explicit RTCP port, then use RTP port + 1\n        }\n        return {\n            port,\n            rtcpPort,\n            ssrc: (ssrcLine && Number(ssrcLine.match(/ssrc:(\\S*)/)?.[1])) || undefined,\n            iceUFrag: (iceUFragLine && iceUFragLine.match(/ice-ufrag:(\\S*)/)?.[1]) || undefined,\n            icePwd: (icePwdLine && icePwdLine.match(/ice-pwd:(\\S*)/)?.[1]) || undefined,\n            ...(encodedCrypto ? decodeSrtpOptions(encodedCrypto) : { srtpKey: undefined, srtpSalt: undefined })\n        };\n    }\n    catch (e) {\n        console.error('Failed to parse SDP from remote end');\n        console.error(sections.join('\\r\\n'));\n        throw e;\n    }\n}\nfunction parseRtpDescription(console, inviteResponse) {\n    const sections = sdp_1.default.splitSections(inviteResponse.content), lines = sdp_1.default.splitLines(sections[0]), cLine = lines.find((line) => line.startsWith('c='));\n    return {\n        sdp: inviteResponse.content,\n        address: cLine.match(/c=IN IP4 (\\S*)/)[1],\n        audio: getRtpDescription(console, sections, 'audio'),\n        video: getRtpDescription(console, sections, 'video')\n    };\n}\nclass Subject {\n    constructor() {\n        this.subscriptions = [];\n    }\n    subscribe(subscription) {\n        this.subscriptions.push(subscription);\n    }\n    next(arg) {\n        while (this.subscriptions.length > 0) {\n            let sub = this.subscriptions.pop();\n            sub(arg);\n        }\n    }\n}\nclass SipManager {\n    constructor(console, sipOptions) {\n        this.sipOptions = sipOptions;\n        this.seq = 20;\n        this.fromParams = { tag: getRandomId() };\n        this.toParams = {};\n        this.callId = getRandomId();\n        this.onEndedByRemote = new Subject();\n        this.destroyed = false;\n        this.audioUfrag = randomString(16);\n        this.videoUfrag = randomString(16);\n        this.console = console;\n        const host = this.sipOptions.localIp, port = this.sipOptions.localPort;\n        this.sipStack = {\n            makeResponse: sip_1.default.makeResponse,\n            ...sip_1.default.create({\n                host,\n                hostname: host,\n                port: port,\n                udp: !this.sipOptions.useTcp,\n                tcp: this.sipOptions.useTcp,\n                tls: false,\n                // tls_port: tlsPort,\n                // tls: {\n                //   rejectUnauthorized: false,\n                // },\n                ws: false,\n                logger: {\n                    error: function (e) {\n                        console.error(e);\n                    },\n                    recv: function (m, remote) {\n                        if ((m.status == '200' || m.method === 'INVITE') && m.headers && m.headers.cseq && m.headers.cseq.method === 'INVITE' && m.headers.contact && m.headers.contact[0]) {\n                            // ACK for INVITE and BYE must use the registrar contact uri\n                            this.registrarContact = m.headers.contact[0].uri;\n                        }\n                        if (sipOptions.debugSip) {\n                            console.log(`<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\r\\n${(0, sip_1.stringify)(m)}\\r\\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<`);\n                        }\n                    },\n                    appendGruu: function (contact, gruuUrn) {\n                        if (sipOptions.gruuInstanceId) {\n                            if (contact && contact[0]) {\n                                if (!contact[0].params) {\n                                    contact[0].params = {};\n                                }\n                                contact[0].params['+sip.instance'] = '\"<urn:uuid:' + sipOptions.gruuInstanceId + '>\"';\n                                if (gruuUrn) {\n                                    contact[0].uri = contact[0].uri + ';gr=urn:uuid:' + sipOptions.gruuInstanceId;\n                                }\n                            }\n                        }\n                    },\n                    send: function (m, remote) {\n                        /*\n                        Some door bells run an embedded SIP server with an unresolvable public domain\n                        Due to bugs in the DNS resolution in sip/sip we abuse the 'send' logger to modify some headers\n                        just before they get sent to the SIP server.\n                        */\n                        if (sipOptions.domain && sipOptions.domain.length > 0) {\n                            // Bticino CX300 specific: runs on an internet 2048362.bs.iotleg.com domain\n                            // While underlying UDP socket is bound to the IP, the header is rewritten to match the domain\n                            let toWithDomain = (sipOptions.to.split('@')[0] + '@' + sipOptions.domain).trim();\n                            let fromWithDomain = (sipOptions.from.split('@')[0] + '@' + sipOptions.domain).trim();\n                            if (m.method == 'REGISTER') {\n                                m.uri = \"sip:\" + sipOptions.domain;\n                                m.headers.to.uri = fromWithDomain;\n                                this.appendGruu(m.headers.contact);\n                            }\n                            else if (m.method == 'INVITE' || m.method == 'MESSAGE') {\n                                m.uri = toWithDomain;\n                                m.headers.to.uri = toWithDomain;\n                                if (m.method == 'MESSAGE' && m.headers.to) {\n                                    m.headers.to.params = null;\n                                }\n                            }\n                            else if (m.method == 'ACK' || m.method == 'BYE') {\n                                m.headers.to.uri = toWithDomain;\n                                if (this.registrarContact)\n                                    m.uri = this.registrarContact;\n                            }\n                            else if ((m.method == undefined && m.status) && m.headers.cseq) {\n                                if (m.status == '200') {\n                                    // Response on invite\n                                    this.appendGruu(m.headers.contact, true);\n                                }\n                                // 183, 200, OK, CSeq: INVITE\n                            }\n                            else {\n                                console.error(\"Error: Method construct for uri not implemented: \" + m.method);\n                            }\n                            if (m.method) {\n                                m.headers.from.uri = fromWithDomain;\n                                if (m.headers.contact && m.headers.contact[0].uri.split('@')[0].lastIndexOf('-') < 0) {\n                                    // Also a bug in SIP.js ? append the transport for the contact if the transport is udp (according to RFC)\n                                    if (remote.protocol != 'udp' && m.headers.contact[0].uri.indexOf(\"transport=\") < 0) {\n                                        m.headers.contact[0].uri = m.headers.contact[0].uri + \";transport=\" + remote.protocol;\n                                    }\n                                }\n                            }\n                        }\n                        if (sipOptions.debugSip) {\n                            console.log(`>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\r\\n${(0, sip_1.stringify)(m)}\\r\\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>`);\n                        }\n                    },\n                },\n            }, (request) => {\n                if (request.method === 'BYE') {\n                    this.console.info('received BYE from remote end');\n                    this.sipStack.send(this.sipStack.makeResponse(request, 200, 'Ok'));\n                    if (!this.destroyed) {\n                        this.onEndedByRemote.next(null);\n                    }\n                }\n                else if (request.method === 'MESSAGE' && sipOptions.sipRequestHandler) {\n                    sipOptions.sipRequestHandler.handle(request);\n                    this.sipStack.send(this.sipStack.makeResponse(request, 200, 'Ok'));\n                }\n                else if (request.method === 'INVITE' && sipOptions.sipRequestHandler) {\n                    //let tryingResponse = this.sipStack.makeResponse( request, 100, 'Trying' )\n                    //this.sipStack.send(tryingResponse)\n                    //TODO: sporadic re-INVITEs are possible and should reply with 486 Busy here if already being handled\n                    let ringResponse = this.sipStack.makeResponse(request, 180, 'Ringing');\n                    this.toParams.tag = getRandomId();\n                    ringResponse.headers.to.params.tag = this.toParams.tag;\n                    ringResponse.headers[\"record-route\"] = request.headers[\"record-route\"];\n                    ringResponse.headers[\"supported\"] = \"replaces, outbound, gruu\";\n                    // Can include SDP and could send 183 here for early media\n                    this.sipStack.send(ringResponse);\n                    sipOptions.sipRequestHandler.handle(request);\n                    // }, 100 )\n                }\n                else if (request.method === 'CANCEL' || request.method === 'ACK') {\n                    sipOptions.sipRequestHandler.handle(request);\n                }\n                else {\n                    if (sipOptions.debugSip) {\n                        this.console.warn(\"unimplemented method received from remote: \" + request.method);\n                    }\n                }\n            })\n        };\n    }\n    request({ method, headers, content, seq, }) {\n        if (this.destroyed) {\n            return Promise.reject(new Error('SIP request made after call was destroyed'));\n        }\n        return new Promise((resolve, reject) => {\n            seq = seq || this.seq++;\n            this.sipStack.send({\n                method,\n                uri: this.sipOptions.to,\n                headers: {\n                    to: {\n                        //name: '\"Scrypted SIP Plugin Client\"',\n                        uri: this.sipOptions.to,\n                        params: (method == 'REGISTER' || method == 'INVITE' ? null : this.toParams),\n                    },\n                    from: {\n                        uri: this.sipOptions.from,\n                        params: this.fromParams,\n                    },\n                    'max-forwards': 70,\n                    'call-id': this.callId,\n                    cseq: { seq, method },\n                    ...headers,\n                },\n                content: content || '',\n            }, (response) => {\n                if (response.headers.to.params && response.headers.to.params.tag) {\n                    this.toParams.tag = response.headers.to.params.tag;\n                }\n                if (response.headers.from.params && response.headers.from.params.tag) {\n                    this.fromParams.tag = response.headers.from.params.tag;\n                }\n                if (response.status >= 300) {\n                    if (response.status !== 408 || method !== 'BYE') {\n                        this.console.error(`sip ${method} request failed with status ` + response.status);\n                    }\n                    reject(new Error(`sip ${method} request failed with status ` + response.status));\n                }\n                else if (response.status < 200) {\n                    // call made progress, do nothing and wait for another response\n                    // console.log('call progress status ' + response.status)\n                }\n                else {\n                    if (method === 'INVITE') {\n                        // The ACK must be sent with every OK to keep the connection alive.\n                        this.acknowledge(seq).catch((e) => {\n                            this.console.error('Failed to send SDP ACK');\n                            this.console.error(e);\n                        });\n                    }\n                    resolve(response);\n                }\n            });\n        });\n    }\n    async acknowledge(seq) {\n        // Don't wait for ack, it won't ever come back.\n        this.request({\n            method: 'ACK',\n            seq, // The ACK must have the original sequence number.\n        }).catch(() => { });\n    }\n    setSipOptions(sipOptions) {\n        this.sipOptions = sipOptions;\n    }\n    sendDtmf(key) {\n        return this.request({\n            method: 'INFO',\n            headers: {\n                'Content-Type': 'application/dtmf-relay',\n            },\n            content: `Signal=${key}\\r\\nDuration=250`,\n        });\n    }\n    /**\n    * Initiate a call by sending a SIP INVITE request\n    */\n    async invite(rtpOptions, audioSection, videoSection, incomingCallRequest) {\n        let ssrc = randomInteger();\n        let audio = audioSection ? audioSection(rtpOptions?.audio, ssrc) : [];\n        let video = videoSection ? videoSection(rtpOptions?.video, ssrc) : [];\n        const { from, localIp } = this.sipOptions;\n        if (incomingCallRequest) {\n            let callResponse = this.sipStack.makeResponse(incomingCallRequest, 200, 'Ok', {\n                headers: {\n                    supported: 'replaces, outbound, gruu',\n                    allow: 'INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO, UPDATE',\n                    'content-type': 'application/sdp',\n                },\n                content: ([\n                    'v=0',\n                    `o=${from.split(':')[1].split('@')[0]} 3747 461 IN IP4 ${localIp}`,\n                    's=ScryptedSipPlugin',\n                    `c=IN IP4 ${this.sipOptions.localIp}`,\n                    't=0 0',\n                    ...audio,\n                    ...video\n                ]\n                    .filter((l) => l)\n                    .join('\\r\\n')) + '\\r\\n'\n            });\n            if (incomingCallRequest.headers[\"record-route\"])\n                callResponse.headers[\"record-route\"] = incomingCallRequest.headers[\"record-route\"];\n            let fromWithDomain = (from.split('@')[0] + '@' + this.sipOptions.domain).trim();\n            callResponse.headers.contact = [{ uri: fromWithDomain }];\n            // Invert the params if the request comes from the server\n            this.fromParams.tag = incomingCallRequest.headers.to.params.tag;\n            this.toParams.tag = incomingCallRequest.headers.from.params.tag;\n            this.callId = incomingCallRequest.headers[\"call-id\"];\n            await this.sipStack.send(callResponse);\n            return parseRtpDescription(this.console, incomingCallRequest);\n        }\n        else {\n            if (this.sipOptions.to.toLocaleLowerCase().indexOf('c300x') >= 0 || this.sipOptions.to.toLocaleLowerCase().indexOf('c100x') >= 0) {\n                // Needed for bt_answering_machine (bticino specific)\n                audio.unshift('a=DEVADDR:' + this.sipOptions.devaddr);\n            }\n            let inviteResponse = await this.request({\n                method: 'INVITE',\n                headers: {\n                    supported: 'replaces, outbound, gruu',\n                    allow: 'INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO, UPDATE',\n                    'content-type': 'application/sdp',\n                    contact: [{ uri: from }],\n                },\n                content: ([\n                    'v=0',\n                    `o=${from.split(':')[1].split('@')[0]} 3747 461 IN IP4 ${localIp}`,\n                    's=ScryptedSipPlugin',\n                    `c=IN IP4 ${this.sipOptions.localIp}`,\n                    't=0 0',\n                    ...audio,\n                    ...video\n                ]\n                    .filter((l) => l)\n                    .join('\\r\\n')) + '\\r\\n'\n            });\n            return parseRtpDescription(this.console, inviteResponse);\n        }\n    }\n    /**\n    * Register the user agent with a Registrar\n    */\n    async register() {\n        const { from } = this.sipOptions;\n        await timeoutPromise(3000, this.request({\n            method: 'REGISTER',\n            headers: {\n                supported: 'replaces, outbound, gruu',\n                allow: 'INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO, UPDATE',\n                contact: [{ uri: from }],\n                expires: this.sipOptions.expire // as seen in tcpdump for Door Entry app\n            },\n        }).catch(() => { }));\n    }\n    /**\n    * Send a message to the current call contact\n    */\n    async message(content) {\n        const { from } = this.sipOptions;\n        return await this.request({\n            method: 'MESSAGE',\n            headers: {\n                //supported: 'replaces, outbound',\n                allow: 'INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, NOTIFY, MESSAGE, SUBSCRIBE, INFO, UPDATE',\n                'content-type': 'text/plain',\n                contact: [{ uri: from, params: { expires: this.sipOptions.expire } }],\n            },\n            content: content\n        });\n    }\n    async sendBye() {\n        this.console.log('Sending BYE...');\n        return await timeoutPromise(3000, this.request({ method: 'BYE' }).catch(() => {\n            // Don't care if we get an exception here.\n        }));\n    }\n    destroy() {\n        this.console.debug(\"detroying sip-manager\");\n        this.destroyed = true;\n        this.sipStack.destroy();\n        this.console.debug(\"detroying sip-manager: done\");\n    }\n}\nexports.SipManager = SipManager;\n","module.exports = require(\"assert\");","module.exports = require(\"crypto\");","module.exports = require(\"dgram\");","module.exports = require(\"dns\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"tls\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(833);\n"],"names":["net","dns","assert","dgram","tls","os","crypto","applyRegex","regex","data","lastIndex","i","r","exec","s","index","parseParams","hdr","params","re","toLowerCase","parseMultiHeader","parser","d","h","push","length","parseGenericHeader","parseAOR","name","uri","parseAorWithUri","parseUri","parseCSeq","seq","method","unescape","parseAuthHeader","a","scheme","r2","exports","compactForm","m","e","l","c","f","k","t","v","parsers","bind","version","protocol","host","port","parse","split","rs","match","status","reason","parseResponse","rq","parseRequest","headers","schema","user","password","map","reduce","x","stringifyVersion","stringifyParams","n","stringifyUri","Object","keys","join","stringifyAOR","aor","stringifyAuthHeader","undefined","stringifiers","via","toUpperCase","to","from","contact","route","cseq","prettifyHeaderName","replace","stringify","content","makeResponse","extension","forEach","clone","o","deep","Array","isArray","defaultPort","proto","makeStreamParser","onMessage","onFlood","maxBytesHeaders","maxContentLength","state","substring","parseMessage","toString","Math","max","min","checkMessage","msg","makeStreamTransport","connect","createServer","callback","remotes","create","flows","init","stream","remote","remoteid","address","flowid","refs","register_flow","localAddress","localPort","setEncoding","on","received","remoteAddress","remotePort","local","console","log","destroy","emit","Error","end","setKeepAlive","setMaxListeners","onError","release","removeListener","send","write","server","open","error","get","close","makeTransport","options","protocols","callbackAndLog","wrap","obj","target","value","publicAddress","hostname","this","hasOwnProperty","rport","logger","recv","udp","UDP","socket","createSocket","isIPv6","rinfo","Buffer","makeUdpTransport","tcp","TCP","makeTcpTransport","TLS","listen","tls_port","makeTlsTransport","flow","message","cn","protos","key","makeWellBehavingResolver","resolve","outstanding","cb","args","arguments","apply","copyMessage","resolveSrv","resolve4","resolve6","action","transport","isIP","resolve46","e4","a4","e6","a6","concat","err","p","arr","addresses","srv","generateBranch","round","random","makeSM","enter","newstate","leave","prototype","shift","signal","createInviteServerTransaction","cleanup","g","timer_i","sm","proceeding","completed","accepted","setTimeout","retry","terminated","clearTimeout","confirmed","shutdown","createServerTransaction","j","trying","createInviteClientTransaction","tu","b","ringTimeLimit","timer_m","calling","reliable","resend","ack","process","nextTick","createClientTransaction","ok","timerE","timerF","makeTransactionId","branch","makeTransactionLayer","server_transactions","client_transactions","id","connection","getServer","getClient","errorLog","transaction","rbytes","randomBytes","encodeFlowToken","createHmac","update","toBase64","digest","decodeFlowToken","token","hop","lr","unshift","onresponse","lastStatusCode","next","searching","client","sequentialSearch","encodeFlowUri","decodeFlowUri","isFlowUri","start","stop","SDPUtils","localCName","generateIdentifier","splitLines","blob","trim","line","splitSections","part","getDescription","sections","getMediaSections","matchPrefix","prefix","filter","indexOf","parseCandidate","parts","candidate","foundation","component","priority","parseInt","ip","type","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","parseIceOptions","parseRtpMap","parsed","payloadType","clockRate","channels","numChannels","writeRtpMap","codec","pt","preferredPayloadType","parseExtmap","direction","attributes","slice","writeExtmap","headerExtension","preferredId","parseFmtp","kv","writeFmtp","parameters","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","writeIceParameters","iceLite","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","find","existingFeedback","writeRtpDescription","kind","caps","maxptime","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","primarySsrc","secondarySsrc","apt","encParam","codecPayloadType","rtx","JSON","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","track","planB","msidParts","parseSctpDescription","parseMLine","maxSizeLine","maxMessageSize","isNaN","sctpPort","fmt","sctpMapLines","writeSctpDescription","media","sctp","output","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","charAt","module","__createBinding","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","defineProperty","__setModuleDefault","__importStar","mod","result","call","__importDefault","SipManager","SipRequestHandler","TimeoutError","timeoutPromise","generateUuid","randomInteger","randomString","decodeSrtpOptions","getRtpDescription","parseRtpDescription","sip_1","sdp_1","crypto_1","constructor","promise","super","timeout","Promise","reject","then","catch","default","randomUUID","floor","encodedOptions","srtpKey","subarray","srtpSalt","getRandomId","mediaType","section","startsWith","rtcpPort","rtcpLine","cryptoLine","rtcpMuxLine","ssrcLine","iceUFragLine","icePwdLine","encodedCrypto","Number","iceUFrag","icePwd","inviteResponse","cLine","audio","video","Subject","subscriptions","subscribe","subscription","arg","pop","sub","sipOptions","fromParams","toParams","callId","onEndedByRemote","destroyed","audioUfrag","videoUfrag","localIp","sipStack","useTcp","ws","registrarContact","debugSip","appendGruu","gruuUrn","gruuInstanceId","domain","toWithDomain","fromWithDomain","lastIndexOf","request","info","sipRequestHandler","handle","ringResponse","warn","response","acknowledge","setSipOptions","sendDtmf","invite","rtpOptions","audioSection","videoSection","incomingCallRequest","callResponse","supported","allow","toLocaleLowerCase","devaddr","register","expires","expire","sendBye","debug","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}